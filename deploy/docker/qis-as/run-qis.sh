#!/bin/bash

# Configure and run a QIS application server (Apache instance) based on
# the environment variables from the Docker image / Docker runtime.
# 
# Depends on running containers with aliases 'qis_db' and 'qis_cache'.
# This script expects to be run as the root user.

FIRST_RUN_LOG_FILE=$QIS_HOME/conf/docker_configured
SETTINGS_FILE=$QIS_HOME/conf/local_settings.py

APACHE_GLOBAL_CONF_FILE=/etc/apache2/conf-enabled/qis.conf
APACHE_APP1_CONF_FILE=/etc/apache2/sites-available/001-qis.conf
APACHE_APP2_CONF_FILE=/etc/apache2/sites-available/002-qis-ssl.conf

if [ ! -f "$FIRST_RUN_LOG_FILE" ]; then
	
	# Set Apache tuning parameters
	# TODO these settings need updating for the event MPM on Ubuntu
	#APACHE_WORKERS_MAX=$(expr $HTTP_THREADS \* $HTTP_PROCESSES + $HTTPS_THREADS \* $HTTPS_PROCESSES \* 4)
	#echo "ServerLimit $APACHE_WORKERS_MAX" >> $APACHE_GLOBAL_CONF_FILE
	#echo "MaxRequestWorkers $APACHE_WORKERS_MAX" >> $APACHE_GLOBAL_CONF_FILE
	#echo "MaxConnectionsPerChild 10000" >> $APACHE_GLOBAL_CONF_FILE
	
	# Set Apache host name and mod_wsgi process groups
	sed -i -e 's/.*ServerName.*/    ServerName '$HOSTNAME'/g' $APACHE_APP1_CONF_FILE
	sed -i -e 's|.*WSGIDaemonProcess.*|    WSGIDaemonProcess qis user='$HTTP_USER' group=www-data processes='$HTTP_PROCESSES' threads='$HTTP_THREADS' python-path='$QIS_HOME'/src:'$QIS_HOME'/lib/python2.7/site-packages|g' $APACHE_APP1_CONF_FILE
	sed -i -e 's/.*ServerName.*/    ServerName '$HOSTNAME'/g' $APACHE_APP2_CONF_FILE
	sed -i -e 's|.*WSGIDaemonProcess.*|    WSGIDaemonProcess qis-ssl user='$HTTP_USER' group=www-data processes='$HTTPS_PROCESSES' threads='$HTTPS_THREADS' python-path='$QIS_HOME'/src:'$QIS_HOME'/lib/python2.7/site-packages|g' $APACHE_APP2_CONF_FILE
	
	# Configure QIS service connections
	SECRET_KEY=$(pwgen -s 32 1)
	DB_POOL_SIZE=$(expr $HTTP_THREADS / 2)
	
	echo "# Settings generated by Docker container launch at $(date)" >> $SETTINGS_FILE
	echo "# Note 'qis_cache' and 'qis_db' servers need to be reachable on the Docker network" >> $SETTINGS_FILE
	echo "" >> $SETTINGS_FILE
	echo "PUBLIC_HOST_NAME = \"$HOSTNAME\"" >> $SETTINGS_FILE
	echo "SECRET_KEY = \"$SECRET_KEY\"" >> $SETTINGS_FILE
	echo "" >> $SETTINGS_FILE
	echo "MEMCACHED_SERVERS = [\"qis_cache:11211\"]" >> $SETTINGS_FILE
	echo "MGMT_DATABASE_CONNECTION = \"postgresql+psycopg2://$DB_USER:$DB_PASSWORD@qis_db:5432/qis-mgmt\"" >> $SETTINGS_FILE
	echo "MGMT_DATABASE_POOL_SIZE = $DB_POOL_SIZE" >> $SETTINGS_FILE
	echo "CACHE_DATABASE_CONNECTION = \"postgresql+psycopg2://$DB_USER:$DB_PASSWORD@qis_db:5432/qis-cache\"" >> $SETTINGS_FILE
	echo "CACHE_DATABASE_POOL_SIZE = $DB_POOL_SIZE" >> $SETTINGS_FILE
	echo "" >> $SETTINGS_FILE
    echo "PDF_BURST_TO_PNG = False" >> $SETTINGS_FILE
    echo "IMAGE_UPLOADED_TEMPLATE = \"SmallJpeg\"" >> $SETTINGS_FILE
	echo "" >> $SETTINGS_FILE
	chown $HTTP_USER:$HTTP_USER $SETTINGS_FILE
	
	echo "Configured $SETTINGS_FILE at $(date)" > "$FIRST_RUN_LOG_FILE"
fi

# Run the main Docker process (the container exits when this returns)
exec apache2ctl -D FOREGROUND
