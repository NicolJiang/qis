#!/bin/bash

# Configure and run a QIS application server (Apache instance) based 
# on the environment variables from the Docker image and linked containers.
# 
# Requires linked containers with aliases 'db' and 'cache'.

if [ ! -f /opt/qis/conf/docker_conf ]; then
	# Configure Apache for the runtime environment
	APACHE_WORKERS_MAX=$(expr $HTTP_THREADS \* $HTTP_PROCESSES + $HTTPS_THREADS \* $HTTPS_PROCESSES \* 4)
	
	# This conf file might be Fedora specific
	APACHE_CONF_FILE=/etc/httpd/conf.modules.d/00-mpm.conf
	
	echo "ServerLimit $APACHE_WORKERS_MAX" >> $APACHE_CONF_FILE
	echo "MaxRequestWorkers $APACHE_WORKERS_MAX" >> $APACHE_CONF_FILE
	echo "MaxConnectionsPerChild 10000" >> $APACHE_CONF_FILE
	
	sed -i -e 's/.*ServerName.*/    ServerName '$HOSTNAME'/g' /etc/httpd/conf.d/qis.conf
	sed -i -e 's/.*WSGIDaemonProcess.*/    WSGIDaemonProcess qis user=qis group=apache processes='$HTTP_PROCESSES' threads='$HTTP_THREADS' python-path=\/opt\/qis\/src::\/opt\/qis\/lib\/python2.7\/site-packages/:\/opt\/qis\/lib64\/python2.7\/site-packages/g' /etc/httpd/conf.d/qis.conf
	sed -i -e 's/.*ServerName.*/    ServerName '$HOSTNAME'/g' /etc/httpd/conf.d/qis-ssl.conf
	sed -i -e 's/.*WSGIDaemonProcess.*/    WSGIDaemonProcess qis-ssl user=qis group=apache processes='$HTTPS_PROCESSES' threads='$HTTPS_THREADS' python-path=\/opt\/qis\/src:\/opt\/qis\/lib\/python2.7\/site-packages/:\/opt\/qis\/lib64\/python2.7\/site-packages/g' /etc/httpd/conf.d/qis-ssl.conf
	
	# Configure QIS service connections
	SETTINGS_FILE=/opt/qis/conf/local_settings.py
	SECRET_KEY=$(pwgen -s 32 1)
	DB_POOL_SIZE=$(expr $HTTP_THREADS / 2)
	
	echo "" >> $SETTINGS_FILE
	echo "# Settings generated by Docker container launch at $(date)" >> $SETTINGS_FILE
	echo "# Note 'cache' and 'db' servers are added to the hosts file by Docker" >> $SETTINGS_FILE
	echo "PUBLIC_HOST_NAME = \"$HOSTNAME\"" >> $SETTINGS_FILE
	echo "SECRET_KEY = \"$SECRET_KEY\"" >> $SETTINGS_FILE
	echo "MEMCACHED_SERVERS = [\"cache:$CACHE_PORT_11211_TCP_PORT\"]" >> $SETTINGS_FILE
	echo "MGMT_DATABASE_CONNECTION = \"postgresql+psycopg2://$DB_ENV_PG_USER:$DB_ENV_PG_PASS@db:$DB_PORT_5432_TCP_PORT/qis-mgmt\"" >> $SETTINGS_FILE
	echo "MGMT_DATABASE_POOL_SIZE = $DB_POOL_SIZE" >> $SETTINGS_FILE
	echo "CACHE_DATABASE_CONNECTION = \"postgresql+psycopg2://$DB_ENV_PG_USER:$DB_ENV_PG_PASS@db:$DB_PORT_5432_TCP_PORT/qis-cache\"" >> $SETTINGS_FILE
	echo "CACHE_DATABASE_POOL_SIZE = $DB_POOL_SIZE" >> $SETTINGS_FILE
	
	echo "Configured $SETTINGS_FILE at $(date)" > /opt/qis/conf/docker_conf
fi

# Run the main Docker process (the container exits when this returns)
/usr/sbin/httpd -D FOREGROUND
