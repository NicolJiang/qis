# QIS Application server
#
# Build notes:
#   Installs QIS into Apache + mod_wsgi, with HTTPS set up using the dummy
#   localhost certificate, and some container-specific settings for QIS.
#   At runtime, requires a data volume container for /opt/qis/images
#   and linked containers for 'db' and 'cache'.
#   The default environment variables assume 4 CPU cores and a memory limit
#   of about 2GB.
#
# Files required in current directory:
#   lib/python2.7/site-packages/ (from QIS distribution dependencies.tar.gz)
#   conf/       (and the following folders from QIS distribution imageserver.tar.gz)
#   deploy/
#   doc/
#   icc/
#   images/
#   lib/
#   licences/
#   logs/
#   src/
#   templates/
#
# Build/Environment variables:
#   HOSTNAME (Required - the host name for Apache to listen on)
#   HTTP_PROCESSES (Optional - set the number of mod_wsgi processes for HTTP)
#   HTTP_THREADS (Optional - set the number of mod_wsgi threads per process for HTTP)
#   HTTPS_PROCESSES (Optional - set the number of mod_wsgi processes for HTTPS)
#   HTTPS_THREADS (Optional - set the number of mod_wsgi threads per process for HTTPS)
#
FROM fedora:21
MAINTAINER Matt Fozard <matt@quru.com>

# Use the latest o/s
RUN yum -y update && yum clean all

# Set the locale for installation
RUN yum -y install glibc-common \
    && localedef --no-archive -i en_GB -f UTF-8 en_GB.utf8 \
    && yum clean all
ENV LANG en_GB.utf8
ENV LC_ALL en_GB.utf8

# Add utils and dependencies, imaging software, web server
RUN yum -y install sudo curl wget pwgen tar zip unzip openldap openssh-clients \
           ghostscript python postgresql ImageMagick libmemcached \
           logrotate httpd mod_wsgi mod_ssl \
    && yum clean all

# Set default tuning options (override these with docker run --env KEY=value)
ENV HOSTNAME images.example.com
ENV HTTP_PROCESSES 2
ENV HTTP_THREADS 15
ENV HTTPS_PROCESSES 2
ENV HTTPS_THREADS 15

# Add the mod_wsgi runtime user
RUN useradd --comment "Quru Image Server" --groups apache --home /opt/qis --system --shell /sbin/nologin qis

# Add template configuration to Apache
ADD deploy/fedora20/wsgi.conf /etc/httpd/conf.d/wsgi.conf
ADD deploy/fedora20/httpd.conf.sample /etc/httpd/conf.d/qis.conf
ADD deploy/fedora20/httpd-ssl.conf.sample /etc/httpd/conf.d/qis-ssl.conf

EXPOSE 80 443

# Install QIS
RUN mkdir -p /opt/qis
ADD conf/ /opt/qis/conf/
ADD deploy/docker/run.sh /opt/qis/
ADD doc/* /opt/qis/doc/
ADD icc/ /opt/qis/icc/
ADD images/ /opt/qis/images/
ADD lib/ /opt/qis/lib/
ADD licences/ /opt/qis/licences/
ADD logs/ /opt/qis/logs/
ADD src/ /opt/qis/src/
ADD templates/ /opt/qis/templates/
RUN chmod a+x /opt/qis/run.sh \
    && chown -R qis:apache /opt/qis

# Add volumes for the persistent data
VOLUME ["/opt/qis/images", "/opt/qis/logs"]

# Configure QIS with a container-specific settings file.
# The service connections are added by run.sh at container run time.
RUN SETTINGS_FILE=/opt/qis/conf/local_settings.py \
    && echo "" > $SETTINGS_FILE \
    && echo "# Settings generated by Docker image build at $(date)" >> $SETTINGS_FILE \
    && echo "PDF_BURST_TO_PNG = False" >> $SETTINGS_FILE \
    && echo "IMAGE_UPLOADED_TEMPLATE = \"SmallJpeg\"" >> $SETTINGS_FILE \
    && chown qis:apache $SETTINGS_FILE

CMD ["/opt/qis/run.sh"]
