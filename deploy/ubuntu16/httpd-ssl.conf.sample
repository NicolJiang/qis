<VirtualHost *:443>

    # Production host name
    ServerName images.example.com

    # Production host name aliases
    # ServerAlias images

    # Request: host/proxy, host (if proxy), time, requested path
    # Response: status code, content length, microseconds (in app), microseconds (in total), image from cache
    # Extra: browser/agent, web page or request origin
    LogFormat "%h %{X-Forwarded-For}i %t \"%r\" %>s %B %{X-Time-Taken}o %D %{X-From-Cache}o \"%{User-Agent}i\" \"%{Referer}i\"" imaging

    # Log requests, or append "env=DISABLED" to disable logging
    CustomLog /var/log/apache2/qis_ssl_access_log imaging

    # Allow other domains to query the data API (required for canvas/zoom image viewer)
    Header set Access-Control-Allow-Origin "*"
    Header set Access-Control-Allow-Headers "Origin, Authorization, If-None-Match, Cache-Control, X-Requested-With, X-Csrf-Token"
    # Allow other domains to see the returned image headers
    Header set Access-Control-Expose-Headers "Content-Length, X-From-Cache, X-Time-Taken"

    # Enable keep-alive, but don't hold connections open for long
    KeepAlive On
    KeepAliveTimeout 3

    # Do not allow queued requests to wait too long
    TimeOut 60

    WSGIScriptAlias / /opt/qis/src/wsgi/runserver.wsgi

    # Set the number of processes and threads as per the scalability required
    WSGIApplicationGroup qis
    WSGIProcessGroup qis-ssl
    WSGIDaemonProcess qis-ssl user=qis group=www-data processes=2 threads=15 python-home=/opt/qis python-path=/opt/qis/src

    # Preload the code to reduce the delay at startup
    WSGIImportScript /opt/qis/src/wsgi/runserver.wsgi process-group=qis-ssl application-group=qis

    # Pass through HTTP Auth headers for API token authentication
    WSGIPassAuthorization On

    <Directory /opt/qis/src/wsgi>
        AllowOverride None
        Require all granted
    </Directory>

    <Directory /opt/qis/src/imageserver/static>
        ExpiresActive On
        ExpiresDefault "access plus 7 days"
        AllowOverride None
        Require all granted
    </Directory>
    <Directory /opt/qis/src/imageserver/admin/static>
        ExpiresActive On
        ExpiresDefault "access plus 7 days"
        AllowOverride None
        Require all granted
    </Directory>
    <Directory /opt/qis/src/imageserver/reports/static>
        ExpiresActive On
        ExpiresDefault "access plus 7 days"
        AllowOverride None
        Require all granted
    </Directory>

    Alias /robots.txt      /opt/qis/src/imageserver/static/robots.txt
    Alias /favicon.ico     /opt/qis/src/imageserver/static/favicon.ico
    Alias /static/         /opt/qis/src/imageserver/static/
    Alias /admin/static/   /opt/qis/src/imageserver/admin/static/
    Alias /reports/static/ /opt/qis/src/imageserver/reports/static/

    # SSL settings recommended by https://mozilla.github.io/server-side-tls/ssl-config-generator/
    SSLEngine               on
    SSLProtocol             all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
    SSLCipherSuite          ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    SSLHonorCipherOrder     on
    # Replace these with a proper certificate and key
    SSLCertificateFile /etc/ssl/certs/ssl-cert-snakeoil.pem
    SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key
    # SSLCACertificateFile /etc/ssl/certs/intermediate-ca.pem
    # SSLCertificateChainFile /etc/ssl/certs/intermediary.pem

    SetEnvIf User-Agent ".*MSIE [2-6].*" \
        nokeepalive ssl-unclean-shutdown \
        downgrade-1.0 force-response-1.0
    SetEnvIf User-Agent ".*MSIE [7-9].*" \
        ssl-unclean-shutdown

</VirtualHost>
