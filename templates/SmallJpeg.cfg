#
# SmallJpeg sample image template.
# 
# Defines a 200x200 jpeg image that would be suitable for displaying a preview
# image on a web site.
#

[ImageAttributes]


# page: The page number to return, relevant only for multi-page file formats
#       such as TIFF and PDF. The first page is returned by default, or if the
#       requested page number does not exist.
#page = 1


# format: Convert the image to a new format (file extension). The formats 
#         available are platform dependent. If you do not specify a format,
#         the image server's default format is used (or if there is none set, 
#         the image is retained in its original format).
#         Examples: jpg, tiff, png, bmp, gif
format = jpg


# quality: The JPEG/PNG compression quality (no effect for other image formats).
#          Valid values are 1 to 100. For JPEG, 1 is lowest quality / best
#          compression with 100 being highest quality and largest file size.
#          For PNG, 1 is fastest compression while 100 is best but slowest compression.
#          PNG compression is lossless, so there is no effect on image quality.
#          If you do not specify a quality, the image server's default quality is used.
quality = 70


# width: Resize the image to this width (number of pixels). If the new 
#        width is greater than the image width, the image will not be scaled.
#        Image height will be kept in proportion if the height is 0 or is not defined. 
width = 200


# height: Resize the image to this height (number of pixels). If the new 
#         height is greater than the image height, the image will not be scaled.
#         Image width will be kept in proportion if the width is 0 or is not defined.
height = 200


# autosizefit: Valid only when a width and height are both defined, requests that
#              the final image size be automatically reduced in order to retain the
#              image's original proportions. This prevents the final image being 
#              padded with fill colour, but does not honour the requested size in 
#              one direction. Valid values are true or false, 1 or 0.
#autosizefit = false


# halign: Valid only when an image is padded with fill colour, sets the horizontal
#         alignment of the inner image within the overall image. Positions are a
#         two-part value of: the inner image edge to align (L, C, or R),
#         and a position from 0.0 (far left) to 1.0 (far right).
#         Examples: L0.0 (align left), C0.5 (align centre), R1.0 (align right)
#
#halign = C0.5


# valign: Valid only when an image is padded with fill colour, sets the vertical
#         alignment of the inner image within the overall image. Positions are a
#         two-part value of: the inner image edge to align (T, C, or B),
#         and a position from 0.0 (very top) to 1.0 (very bottom).
#         Examples: T0.0 (align top), C0.5 (align centre), B1.0 (align bottom)
#
#valign = C0.5


# angle: Rotate the image to the right by a number of degrees (floating 
#        point number). Specify a negative number to rotate to the left.
#        Valid values are 0 to 360. Examples: 0.1, 180, -90
#angle = 0


# flip: Flip the image horizontally or vertically.
#       Valid values are h or v.
#flip = h


# top: Crop the top of the image at a point from 0.0 (top edge) to 1.0
#      (bottom edge). The top crop value must not exceed the bottom crop value.
#      Example: 0.1
#top = 0


# left: Crop the left of the image at a point from 0.0 (left edge) to 1.0
#       (right edge). The left crop value must not exceed the right crop value.
#       Example: 0.1
#left = 0


# bottom: Crop the bottom of the image at a point from 0.0 (top edge) to 1.0
#         (bottom edge). The top crop value must not exceed the bottom crop value.
#         Example: 0.9
#bottom = 1.0


# right: Crop the right of the image at a point from 0.0 (left edge) to 1.0
#        (right edge). The left crop value must not exceed the right crop value.
#        Example: 0.9
#right = 1.0


# autocropfit: Valid only when the image is being cropped, and a width and height
#              are both defined. This setting requests that the crop area be
#              automatically expanded (either vertically or horizontally) so that
#              the final crop rectangle matches the final image rectangle as closely
#              as possible. This minimises the amount of fill colour (padding)
#              in the final image, but does not honour the requested crop in one
#              direction. Valid values are true or false, 1 or 0.
#autocropfit = false


# fill: When a width and height are both defined and autosizefit is false, or 
#       if non-90 degree rotation is being applied, the requested image size is
#       always respected even if the adjusted image does not fit the rectangle.
#       In this scenario, the adjusted image is scaled to best fit inside the
#       requested area, and the surrounding space is filled with the fill colour.
#       Valid values are hexadecimal "web" format or one of a set of pre-defined
#       English colour names. Examples: red, ff0000, rgb(255,0,0)
#fill = ffffff


# sharpen: Applies a routine to either sharpen or blur the image. A small amount
#          of sharpening (e.g. 50) sometimes enhances a resized image. Valid 
#          values are -500 (heavy blur) to 0 (no effect) to 500 (heavy sharpen).
sharpen = 50


# strip: Strips embedded image information (such as author, copyright text, 
#        camera model, capture settings, etc) by removing any embedded
#        EXIF/IPTC/XMP profile. Embedded ICC profiles are also removed
#        (so be wary if using with "icc"). This results in a smaller image file.
#        If you do not specify a value, the image server's default strip setting
#        is used. Valid values are true or false, 1 or 0.
strip = true


# dpi: Sets the DPI resolution for the image, usually required when the image will
#      be printed. A value of 72 or 96 would typically target a standard computer 
#      monitor. A value of 0 leaves the image resolution unchanged. If you do not 
#      specify a value, the image server's default DPI is used (or if there is 
#      none set, the image resolution again remains unchanged). For PDF to image
#      conversions, higher values result in larger images.
dpi = 72


# icc: Apply the named ICC colour profile to the image, possibly changing its
#      colour model. The profile names available are those files in the image
#      server's "icc" directory. Take care when using "strip" (because strip
#      removes the colour profile). Example: AdobeRGB1998.
#icc =


# intent: Valid only when an ICC colour profile is being applied, defines the
#         rendering intent for how to apply the colour profile. Valid values
#         are: saturation, perceptual, absolute, or relative.
#intent =


# bpc: Valid only when applying an ICC colour profile with the 'relative' 
#      rendering intent, determines whether Black Point Compensation is applied
#      during the process. Valid values are true or false, 1 or 0.
#bpc = true


# colorspace: Changes the colour model of the image to "RGB", "CMYK", or "GRAY".
#             Images to display on the web (or on screen) should be RGB.
#             Images to publish in print are sometimes required in CMYK format.
#             Note that conversion to CMYK is better handled by applying a
#             particular ICC colour profile. If you do not specify a colorspace,
#             the image server's default setting is used.
colorspace = RGB


# overlay: Provides the path of a second image to overlay on top of the first.
#          This must be a local image server path, without an "http" part.
#          By default the overlay image is centred (see ovpos).
#overlay = mypath/myimage.png


# ovsize: Valid only when an overlay is being applied, defines the size of the
#         overlay image relative to the main image. Valid values are from 0 to
#         1. Example: 0.5 is half the width/height of the main image.
#         Note the overlay will not be enlarged beyond its original size.
#ovsize = 1.0


# ovpos: Valid only when an overlay is being applied, defines the position of
#        the overlay image inside the main image. Valid values are one of the
#        8 compass points: "N", "NE", "E", "SE" etc, or "C" to centre.
#ovpos = C


# ovopacity: Valid only when an overlay is being applied, defines the opacity
#            level of the overlay, and whether it blends into the main image.
#            Valid values are from 0 to 1, where 0 is fully transparent and 1
#            is fully opaque.
#ovopacity = 1.0


[BrowserOptions]

# expiry: The number of seconds for which a client (web browser) should cache
#         the image for before re-requesting it from the server. If you do not 
#         specify a value, the image server's default expiry time is used.
#         A value of 604800 (7 days) or more is typical.
#         A value of 31536000 (1 year) means do not expire the image.
#         A value of 0 means do not provide an expiry time to the client.
#         A value of -1 means expire the image immediately (do not cache it).
#expiry = 604800


# attach: Whether to send the image to the client as an attachment (which prompts
#         the user to save the file) rather than displaying it (default).
#         Valid values are true or false, 1 or 0.
#attach = false


[Miscellaneous]

# stats: Whether to enable the counting of views and downloads for this image
#        in the management statistics / system reports. The recording of
#        bandwidth statistics is not affected by this setting.
#        Valid values are true or false, 1 or 0. Default is true.
#stats = true
